<!DOCTYPE html>
<html >
  <head>
    <meta charset="utf-8" />

    <!-- Load d3.js -->
    <script src="https://d3js.org/d3.v4.js"></script>
    <link rel="preconnect" href="https://fonts.gstatic.com" />
    <link
      href="https://fonts.googleapis.com/css2?family=Quicksand:wght@300&display=swap"
      rel="stylesheet"
    />
    <title>Titanic</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="//netdna.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css" rel="stylesheet" media="screen">
    <style>
        .container {
            max-width: 1000px;
        }
    </style>
  </head>

  <body>

  <div class="container">
        <div class="row">
            <div class="col-sm-5 col-sm-offset-1">
                <h1>Titanic</h1>
                <form role="form" method='POST' action='/'>
                    <div class="form-group">
                        <h4 for="gender-rdo">Gender</h4>
                        <input type="radio" name="gender" id="gender-rdo" value="male" style="max-width: 300px;"
                            autofocus required> Male<br>
                        <input type="radio" name="gender" id="gender-rdo" value="female" style="max-width: 300px;"
                            autofocus required> Female<br>
                    </div>
                   <div class="form-group">
                        <h4 for="pcl-rdo">Pclass</h4>
                        <input type="radio" name="pclass" id="pcl-rdo" value="1" style="max-width: 300px;" autofocus
                            required> 1<br>
                        <input type="radio" name="pclass" id="pcl-rdo" value="2" style="max-width: 300px;" autofocus
                            required> 2<br>
                        <input type="radio" name="pclass" id="pcl-rdo" value="3" style="max-width: 300px;" autofocus
                            required> 3<br>
                    </div>
                    <div class="form-group">
                        <h4 for="numb">PassengerId</h4>
                        <input type="number" name="age" id="numb" style="max-width: 300px;" autofocus
                            required>
                    </div>
                    <button type="submit" class="btn btn-default" name = "action" value="Submit">Submit</button><br><br>
                
                    <button onclick="myFunction()">Click me</button>

                    <p id="demo"></p>

                    <script>
                    function myFunction() {
                    document.getElementById("demo").innerHTML = "Hello abdo";
                     }
                   </script>
                </form>
                <br>
                {% for error in errors %}
                <h4>{{ error }}</h4>
                {% endfor %}
                <br>
            </div>
            <div class="col-sm-5 col-sm-offset-1">
                {% if results %}
                <h2>Result</h2>
                <br>
                <div id="results">
                    <table class="table table-striped" style="max-width: 300px;">
                        <thead>
                            <tr>
                                <th>Survived?</th>
                            </tr>
                        </thead>

                        <tr>
                            <td>{{ results }}</td>

                        </tr>

                    </table>
                </div>
                {% endif %}
            </div>
        </div>
    </div>
    <br><br>
    <script src="//code.jquery.com/jquery-2.2.1.min.js"></script>
    <script src="//netdna.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js"></script>

    <!-- Create a div where the graph will take place -->

    <div id="my_dataviz"></div>
    <div class="legend"></div>
    <div class="another_div"></div>


    <style>

      #my_dataviz {
        height: 600px;
        width: 600px;
      }
      .another_div {
        height: 800px;
        width: 800px;
      }
    </style>



    <!-- <select name="drop" id="survived">
      <option value="survived">survived</option>
      <option value="not-survived">Not survived</option>
      <script>
        var young = people.filter(function(person) {
          return person.age < 35;
        });
      </script>
    </select> -->

    <script>
      // set the dimensions and margins of the graph
      var margin = {
          top: 10,
          right: 30,
          bottom: 80,
          left: 60,
        },
        width = 460 - margin.left - margin.right,
        height = 400 - margin.top - margin.bottom;

      // append the svg object to the body of the page
      var svg = d3
        .select("#my_dataviz")
        .append("svg")
        // *** start resize the svg to the div parent
        .attr("preserveAspectRatio", "xMinYMin meet")
        .attr("viewBox", "0 0 460 400")
        // *** end resize the svg to the div parent
        .append("g")
        .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

      //Read the data
      d3.csv(
        "https://gist.githubusercontent.com/michhar/2dfd2de0d4f8727f873422c5d959fff5/raw/fa71405126017e6a37bea592440b4bee94bf7b9e/titanic.csv",
        function (rawData) {
          // All values are strings here, so we need to parse some of them.
          // You can do that using `+x` or `Number(x)`, where `x = "123"`
          const data = rawData.map(function (d) {
            return {
              age: Number(d.Age),
              // cabin: d.Cabin,
              // embarked: e.Embarked,
              // fare: Number(d.Fare),
              // name: d.Name,
              // parch: Number(d.Parch),
              // passengerId: Number(d.PassengerId)
              pclass: Number(d.Pclass),
              sex: d.Sex,
              // sibSp: Number(d.SibSp),
              // survived: d.Survived === "1"
              // ticket: d.Ticket,
            };
          });

          // Add X axis
          var x = d3.scaleLinear().domain([0.5, 3.5]).range([0, width]);
          svg
            .append("g")
            .attr("transform", "translate(0," + height + ")")
            .call(d3.axisBottom(x))
            .attr("font-family", "Quicksand");

          // add x-axis label
          svg
            .append("text")
            .attr(
              "transform",
              "translate(" +
                width / 2 +
                " , " +
                (height + margin.top + 30) +
                ")"
            )
            .style("text-anchor", "middle")
            .text("Passenger Class")
            .attr("font-family", "Quicksand");

          // Add Y axis
          var y = d3.scaleLinear().domain([0, 90]).range([height, 0]);
          svg.append("g").call(d3.axisLeft(y));

          var color = d3
            .scaleOrdinal()
            .domain(["male", "female"])
            .range(["#26C6DA", "B824C3"]);

          // Add y-axis label
          svg
            .append("text")
            .attr("transform", "rotate(-90)")
            .attr("y", -40)
            .attr("x", 0 - height / 2)
            .style("text-anchor", "middle")
            .text("Age")
            .attr("font-family", "Quicksand");

          // Add dots
          svg
            .append("g")
            .selectAll("dot")
            .data(data)
            .enter()
            .append("circle")
            .attr("cx", function (d) {
              return x(d.pclass);
            })
            .attr("cy", function (d) {
              return y(d.age);
            })
            .attr("r", 2)
            .style("fill", function (d) {
              return color(d.sex);
            });

          // Add a legend
          var legend = svg
            .selectAll(".legend")
            .data(color.domain())
            .enter()
            .append("g")
            .attr("class", "legend")
            .attr("transform", function (d, i) {
              return "translate(0, " + (height - 300 - i * 20) + ") ";
            });

          legend
            .append("rect")
            .attr("x", width - 18)
            .attr("width", 18)
            .attr("height", 18)
            .style("fill", color);

          legend
            .append("text")
            .attr("x", width - 24)
            .attr("y", 9)
            .attr("dy", ".35em")
            .style("text-anchor", "end")
            .attr("font-family", "Quicksand")
            .text(function (d) {
              return d;
            });
        }
      );
    </script>
  </body>
</html>
